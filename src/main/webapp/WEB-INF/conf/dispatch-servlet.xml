<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        ">

	<!-- 페이지 컨트롤러를 찾아 객체를 생성한다. 단, DAO와 Service 관련 객체는 제외해야 한다. -->
	<context:component-scan base-package="java76.pms.controller" />

	<!-- @RequestMapping -->
	<mvc:annotation-driven enable-matrix-variables="true" />

	<!-- 멀티파트 요청 파라미터를 처리할 객체 등록 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />
	</bean>
	<!--
   기존의 View Resolver( : 뷰 컴포넌트 실행시키는 객체 )를 대체
   => 프론트 컨트롤러는 페이지 컨트롤러가 리턴한 뷰 이름을 다음 객체에게 전달한다.
   => InternalResourceViewResolver 는 페이지 컨트롤러가 리턴한 값 앞, 뒤로 문자열을 붙여서
      JSP 경로를 알아낸다.
         그리고 JstlView 객체를 통해 JSP를 처리한다. 
  -->
  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <property name="prefix" value="/WEB-INF/jsp/"/> <!-- 리턴값 앞에 붙음-->
    <property name="suffix" value=".jsp"/>  <!-- 리턴값 뒤에 붙음-->
  </bean>
  
</beans>